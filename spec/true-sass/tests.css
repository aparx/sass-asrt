@charset "UTF-8";
/* # Module: is-empty [function] */
/* ----------------------------- */
/* Test: Returns true if is empty */
/*   ✔ [assert-true] Returns true if is empty */
/*   ✔ [assert-true] Returns true if is empty */
/*   ✔ [assert-true] Returns true if is empty */
/*   ✔ [assert-true] Returns true if is empty */
/*   ✔ [assert-false] Returns true if is empty */
/*   ✔ [assert-false] Returns true if is empty */
/*   ✔ [assert-false] Returns true if is empty */
/*   ✔ [assert-false] Returns true if is empty */
/*   ✔ [assert-false] Returns true if is empty */
/*  */
/*  */
/* # Module: count [function] */
/* -------------------------- */
/* Test: Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*   ✔ [assert-equal] Returns the length of an iterable or string */
/*  */
/*  */
/* # Module: is-map [function] */
/* --------------------------- */
/* Test: Returns true if an object is a map */
/*   ✔ [assert-true] Returns true if an object is a map */
/*   ✔ [assert-false] Returns true if an object is a map */
/*   ✔ [assert-false] Returns true if an object is a map */
/*  */
/*  */
/* # Module: is-list [function] */
/* ---------------------------- */
/* Test: Returns true if an object is a list */
/*   ✔ [assert-true] Returns true if an object is a list */
/*   ✔ [assert-false] Returns true if an object is a list */
/*   ✔ [assert-false] Returns true if an object is a list */
/*  */
/*  */
/* # Module: as-boolean [function] */
/* ------------------------------- */
/* Test: Returns a boolean if a value is natively truthy */
/*   ✔ [assert-false] Returns a boolean if a value is natively truthy */
/*   ✔ [assert-true] Returns a boolean if a value is natively truthy */
/*   ✔ [assert-false] Returns a boolean if a value is natively truthy */
/*   ✔ [assert-true] Returns a boolean if a value is natively truthy */
/*  */
/*  */
/* # Module: is-truthy [function] */
/* ------------------------------ */
/* Test: Returns true if a value is extensively truthy */
/*   ✔ [assert-false] Returns true if a value is extensively truthy */
/*   ✔ [assert-false] Returns true if a value is extensively truthy */
/*   ✔ [assert-false] Returns true if a value is extensively truthy */
/*   ✔ [assert-false] Returns true if a value is extensively truthy */
/*   ✔ [assert-false] Returns true if a value is extensively truthy */
/*   ✔ [assert-true] Returns true if a value is extensively truthy */
/*   ✔ [assert-true] Returns true if a value is extensively truthy */
/*   ✔ [assert-true] Returns true if a value is extensively truthy */
/*   ✔ [assert-true] Returns true if a value is extensively truthy */
/*   ✔ [assert-true] Returns true if a value is extensively truthy */
/*  */
/*  */
/* # Module: is-falsy [function] */
/* ----------------------------- */
/* Test: Returns true if a value is extensively falsy */
/*   ✔ [assert-true] Returns true if a value is extensively falsy */
/*   ✔ [assert-true] Returns true if a value is extensively falsy */
/*   ✔ [assert-true] Returns true if a value is extensively falsy */
/*   ✔ [assert-true] Returns true if a value is extensively falsy */
/*   ✔ [assert-true] Returns true if a value is extensively falsy */
/*   ✔ [assert-false] Returns true if a value is extensively falsy */
/*   ✔ [assert-false] Returns true if a value is extensively falsy */
/*   ✔ [assert-false] Returns true if a value is extensively falsy */
/*   ✔ [assert-false] Returns true if a value is extensively falsy */
/*   ✔ [assert-false] Returns true if a value is extensively falsy */
/*  */
/*  */
/* # Module: is-time [function] */
/* ---------------------------- */
/* Test: Returns true if a value is a time */
/*   ✔ [assert-true] Returns true if a value is a time */
/*   ✔ [assert-true] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*   ✔ [assert-false] Returns true if a value is a time */
/*  */
/*  */
/* # Module: is-angle [function] */
/* ----------------------------- */
/* Test: Returns true if a value is an angle */
/*   ✔ [assert-true] Returns true if a value is an angle */
/*   ✔ [assert-true] Returns true if a value is an angle */
/*   ✔ [assert-true] Returns true if a value is an angle */
/*   ✔ [assert-true] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*   ✔ [assert-false] Returns true if a value is an angle */
/*  */
/*  */
/* # Module: is-frequency [function] */
/* --------------------------------- */
/* Test: Returns true if a value is a frequency */
/*   ✔ [assert-true] Returns true if a value is a frequency */
/*   ✔ [assert-true] Returns true if a value is a frequency */
/*   ✔ [assert-false] Returns true if a value is a frequency */
/*   ✔ [assert-false] Returns true if a value is a frequency */
/*   ✔ [assert-false] Returns true if a value is a frequency */
/*   ✔ [assert-false] Returns true if a value is a frequency */
/*   ✔ [assert-false] Returns true if a value is a frequency */
/*   ✔ [assert-false] Returns true if a value is a frequency */
/*  */
/*  */
/* # Module: is-integer [function] */
/* ------------------------------- */
/* Test: Returns true if a value is an integer */
/*   ✔ [assert-true] Returns true if a value is an integer */
/*   ✔ [assert-true] Returns true if a value is an integer */
/*   ✔ [assert-true] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*   ✔ [assert-false] Returns true if a value is an integer */
/*  */
/*  */
/* # Module: is-relative-length [function] */
/* --------------------------------------- */
/* Test: Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-true] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*   ✔ [assert-false] Returns true if a value is a relative length */
/*  */
/*  */
/* # Module: is-absolute-length [function] */
/* --------------------------------------- */
/* Test: Returns true if a value is an absolute length */
/*   ✔ [assert-true] Returns true if a value is an absolute length */
/*   ✔ [assert-true] Returns true if a value is an absolute length */
/*   ✔ [assert-true] Returns true if a value is an absolute length */
/*   ✔ [assert-true] Returns true if a value is an absolute length */
/*   ✔ [assert-true] Returns true if a value is an absolute length */
/*   ✔ [assert-true] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*   ✔ [assert-false] Returns true if a value is an absolute length */
/*  */
/*  */
/* # Module: is-percentage [function] */
/* ---------------------------------- */
/* Test: Returns true if a value is a percentage */
/*   ✔ [assert-true] Returns true if a value is a percentage */
/*   ✔ [assert-true] Returns true if a value is a percentage */
/*   ✔ [assert-true] Returns true if a value is a percentage */
/*   ✔ [assert-false] Returns true if a value is a percentage */
/*   ✔ [assert-false] Returns true if a value is a percentage */
/*   ✔ [assert-false] Returns true if a value is a percentage */
/*  */
/*  */
/* # Module: is-resolution [function] */
/* ---------------------------------- */
/* Test: Returns true if a value is a resolution */
/*   ✔ [assert-true] Returns true if a value is a resolution */
/*   ✔ [assert-true] Returns true if a value is a resolution */
/*   ✔ [assert-true] Returns true if a value is a resolution */
/*   ✔ [assert-true] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*   ✔ [assert-false] Returns true if a value is a resolution */
/*  */
/*  */
/* # Module: is-position [function] */
/* -------------------------------- */
/* Test: Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-true] Returns true if a value is a position */
/*   ✔ [assert-false] Returns true if a value is a position */
/*   ✔ [assert-false] Returns true if a value is a position */
/*   ✔ [assert-false] Returns true if a value is a position */
/*  */
/*  */
/* # Module: nonnull-or [function] */
/* ------------------------------- */
/* Test: Returns x if x is not null, otherwise y */
/*   ✔ [assert-equal] Returns x if x is not null, otherwise y */
/*   ✔ [assert-equal] Returns x if x is not null, otherwise y */
/*   ✔ [assert-equal] Returns x if x is not null, otherwise y */
/*   ✔ [assert-equal] Returns x if x is not null, otherwise y */
/*  */
/*  */
/* # Module: truthy-or [function] */
/* ------------------------------ */
/* Test: Returns x if x is truthy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is truthy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is truthy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is truthy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is truthy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is truthy, otherwise y */
/*  */
/*  */
/* # Module: falsy-or [function] */
/* ----------------------------- */
/* Test: Returns x if x is falsy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is falsy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is falsy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is falsy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is falsy, otherwise y */
/*   ✔ [assert-equal] Returns x if x is falsy, otherwise y */
/*  */
/*  */

/*# sourceMappingURL=tests.css.map */
